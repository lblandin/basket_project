// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NBA_project.Helpers;

#nullable disable

namespace NBA_project.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("NBA_project.Common.Models.Players", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("TeamsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TeamsId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("NBA_project.Common.Models.Stades", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("PlayersId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlayersId");

                    b.ToTable("Stades");
                });

            modelBuilder.Entity("NBA_project.Common.Models.Teams", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("PlayersId")
                        .HasColumnType("int");

                    b.Property<int>("StadesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlayersId");

                    b.HasIndex("StadesId");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("NBA_project.Common.Models.Players", b =>
                {
                    b.HasOne("NBA_project.Common.Models.Teams", "Teams")
                        .WithMany()
                        .HasForeignKey("TeamsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Teams");
                });

            modelBuilder.Entity("NBA_project.Common.Models.Stades", b =>
                {
                    b.HasOne("NBA_project.Common.Models.Players", "Players")
                        .WithMany()
                        .HasForeignKey("PlayersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Players");
                });

            modelBuilder.Entity("NBA_project.Common.Models.Teams", b =>
                {
                    b.HasOne("NBA_project.Common.Models.Players", "Players")
                        .WithMany()
                        .HasForeignKey("PlayersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NBA_project.Common.Models.Stades", "Stades")
                        .WithMany()
                        .HasForeignKey("StadesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Players");

                    b.Navigation("Stades");
                });
#pragma warning restore 612, 618
        }
    }
}
